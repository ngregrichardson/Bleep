{"version":3,"sources":["components/NavBar.tsx","routes/home.tsx","routes/notFound.tsx","routes/stage.tsx","routes/upload.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/logo.svg"],"names":["NavBar","history","useHistory","location","useLocation","isTabletOrMobileDevice","useMediaQuery","query","useState","open","setOpen","Navbar","appearance","className","Header","onClick","pathname","goToAnchor","push","Body","Nav","pullRight","Item","Icon","icon","style","marginTop","marginRight","width","size","href","target","Home","navigateToUpload","Helmet","height","window","innerHeight","lineHeight","div","animate","y","transition","ease","duration","loop","Infinity","times","src","IconLogo","alt","IconButton","circle","id","textAlign","fontSize","undefined","Steps","vertical","title","description","status","Button","marginBottom","NotFound","defaultWords","progressStyle","display","Stage","stage","setStage","video","setVideo","sfx","setSfx","sort","words","setWords","word","setWord","progress","setProgress","setStatus","message","setMessage","downloadUrl","setDownloadUrl","errorId","setErrorId","socketId","setSocketId","copied","setCopied","confirmModalOpen","setConfirmModalOpen","useEffect","socket","io","on","data","handleAddWord","includes","trim","Alert","info","restartProcess","exitBeforeEnter","key","initial","opacity","exit","Uploader","autoUpload","fileList","onChange","files","length","draggable","multiple","accept","disabled","position","justifySelf","alignSelf","left","top","InputGroup","Input","placeholder","value","onPressEnter","List","bordered","flex","map","item","index","flexDirection","alignItems","justifyContent","filter","w","handleRemoveWord","error","formData","FormData","append","blobFile","name","JSON","stringify","fetch","method","body","then","res","json","statusCode","url","errorRef","catch","e","console","Progress","Circle","percent","trailColor","Whisper","placement","trigger","speaker","Tooltip","onExited","cursor","textArea","document","createElement","appendChild","select","execCommand","remove","Modal","show","onHide","Title","Footer","Upload","backgroundColor","App","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1d6b93af.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n// @ts-ignore\nimport { goToAnchor } from \"react-scrollable-anchor\";\n// @ts-ignore\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Icon, Nav, Navbar } from \"rsuite\";\n// @ts-ignore\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction NavBar() {\n  const history = useHistory();\n  const location = useLocation();\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 712px)\",\n  });\n  const [open, setOpen] = useState(false);\n\n  let handleBrandClick = () => {\n    if (location.pathname === \"/\") {\n      goToAnchor(\"top\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  let handleAboutClick = () => {\n    if (location.pathname === \"/\") {\n      goToAnchor(\"about\");\n    } else {\n      history.push(\"/#about\");\n    }\n    setOpen(false);\n  };\n\n  let navigateToUpload = () => {\n    history.push(\"/upload\");\n    setOpen(false);\n  };\n\n  let navigateToHome = () => {\n    history.push(\"/\");\n    setOpen(false);\n  };\n\n  return (\n    <Navbar\n      appearance={\"subtle\"}\n      className={isTabletOrMobileDevice ? \"navbar-mobile\" : \"navbar\"}\n    >\n      <Navbar.Header>\n        <h4 className=\"navbar-brand\" onClick={handleBrandClick}>\n          Bl<span className=\"primary-text-color\">ee</span>p\n        </h4>\n      </Navbar.Header>\n      {isTabletOrMobileDevice ? (\n        <Navbar.Body>\n          <Nav pullRight>\n            <Nav.Item onClick={() => setOpen(!open)}>\n              <Icon\n                icon={\"bars\"}\n                style={{ marginTop: -5, marginRight: -5, width: 28 }}\n                size={\"2x\"}\n              />\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      ) : null}\n      {(!isTabletOrMobileDevice || open) && (\n        <Navbar.Body>\n          <Nav pullRight>\n            {location.pathname === \"/\" ? null : (\n              <Nav.Item onClick={navigateToHome}>Home</Nav.Item>\n            )}\n            <Nav.Item onClick={handleAboutClick}>About</Nav.Item>\n            <Nav.Item onClick={navigateToUpload}>Upload</Nav.Item>\n            <Nav.Item\n              href={\"https://github.com/ngregrichardson/Bleep\"}\n              target={\"_blank\"}\n              icon={<Icon icon=\"github\" />}\n            >\n              GitHub\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      )}\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n// @ts-ignore\nimport ScrollableAnchor from \"react-scrollable-anchor\";\nimport { motion } from \"framer-motion\";\nimport IconLogo from \"../assets/logo.svg\";\n// @ts-ignore\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Icon, IconButton, Steps } from \"rsuite\";\n// @ts-ignore\nimport { Helmet } from \"react-helmet\";\n// @ts-ignore\nimport { useMediaQuery } from \"react-responsive\";\n\nconst bobLength = 10;\n\nfunction Home() {\n  const history = useHistory();\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 712px)\",\n  });\n\n  let navigateToUpload = () => {\n    history.push(\"/upload\");\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>Home | Bleep</title>\n      </Helmet>\n      <div\n        className=\"full-page-section\"\n        style={{\n          height: isTabletOrMobileDevice ? window.innerHeight - 56 : \"100vh\",\n        }}\n      >\n        <h1\n          className=\"jumbotron-title\"\n          style={{ lineHeight: isTabletOrMobileDevice ? \"150%\" : \"auto\" }}\n        >\n          Stop That S%*t\n        </h1>\n        <motion.div\n          className=\"jumbotron-bob\"\n          animate={{ y: [-bobLength, bobLength, -bobLength] }}\n          transition={{\n            ease: \"easeInOut\",\n            duration: 3,\n            loop: Infinity,\n            times: [0, 0.5, 1],\n          }}\n        >\n          <img\n            src={IconLogo}\n            style={{ width: isTabletOrMobileDevice ? \"50%\" : \"auto\" }}\n            className=\"jumbotron-icon\"\n            alt={\"bleep-icon\"}\n          />\n        </motion.div>\n        {isTabletOrMobileDevice ? null : (\n          <motion.div\n            className=\"down-button\"\n            animate={{ y: [-bobLength, bobLength, -bobLength] }}\n            transition={{\n              ease: \"easeInOut\",\n              duration: 3,\n              loop: Infinity,\n              times: [0, 0.5, 1],\n            }}\n          >\n            <IconButton\n              circle\n              href=\"#about\"\n              appearance=\"subtle\"\n              size=\"lg\"\n              icon={<Icon icon={\"angle-down\"} size={\"5x\"} />}\n            />\n          </motion.div>\n        )}\n      </div>\n      <div className=\"full-page-section\">\n        <ScrollableAnchor id=\"about\">\n          <h1 style={{ textAlign: \"center\" }}>\n            About Bl<span className=\"primary-text-color\">ee</span>p\n          </h1>\n        </ScrollableAnchor>\n        <p\n          className=\"paragraph-center margin-top-small\"\n          style={{\n            fontSize: isTabletOrMobileDevice ? \"100%\" : \"auto\",\n            width: isTabletOrMobileDevice ? \"90%\" : undefined,\n          }}\n        >\n          I thought of Bleep on my drive to school one day. I had been without a\n          project for a few days and I was itching to start on a new one. I\n          created the functionality over the next few weeks, but once summer\n          started, I started working on other things and never finished the\n          front end. A year later, as I was ending my first year of college, I\n          decided to finish up some old projects: including Bleep. There are\n          four simple steps to use Bleep.\n        </p>\n        <Steps className=\"about-steps\" vertical={isTabletOrMobileDevice}>\n          <Steps.Item\n            icon={<Icon icon={\"video-camera\"} size={\"2x\"} />}\n            title=\"Upload Your Video\"\n            description=\"This is where you upload your video file. The audio will be extracted from the video and searched for the selected words.\"\n            status={\"process\"}\n          />\n          <Steps.Item\n            icon={<Icon icon={\"volume-up\"} size={\"2x\"} />}\n            title=\"Custom Sound Effect\"\n            description=\"You have the option to upload a custom sound file that will be used in place of any selected words. You can skip this step to use the default bleep.\"\n            status={\"process\"}\n          />\n          <Steps.Item\n            icon={<Icon icon={\"ban\"} size={\"2x\"} />}\n            title=\"Blacklist Words\"\n            description=\"You can choose from our default list of common swear words and add or remove your own to customize it for your audience.\"\n            status={\"process\"}\n          />\n          <Steps.Item\n            icon={<Icon icon={\"cloud-download\"} size={\"2x\"} />}\n            title=\"Download Your Video\"\n            description=\"The rest is on us! Once that progress bar hits 100% and you see a green checkmark, your file is ready to be downloaded.\"\n            status={\"process\"}\n          />\n          {isTabletOrMobileDevice ? (\n            <Button\n              appearance=\"primary\"\n              className=\"margin-top-small\"\n              size={\"lg\"}\n              style={{ width: \"100%\", marginBottom: 15 }}\n              onClick={navigateToUpload}\n            >\n              Try it out!\n            </Button>\n          ) : null}\n        </Steps>\n        {isTabletOrMobileDevice ? null : (\n          <Button\n            appearance=\"primary\"\n            className=\"margin-top-small\"\n            size={\"lg\"}\n            onClick={navigateToUpload}\n          >\n            Try it out!\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport IconLogo from \"../assets/logo.svg\";\n// @ts-ignore\nimport { Helmet } from \"react-helmet\";\n\nconst bobLength = 10;\n\nfunction NotFound() {\n  return (\n    <div>\n      <Helmet>\n        <title>Page Not Found | Bleep</title>\n      </Helmet>\n      <div className=\"full-page-section\">\n        <h1 className=\"jumbotron-title\">F%*k, we couldn't find that</h1>\n        <motion.div\n          className=\"jumbotron-bob\"\n          animate={{ y: [-bobLength, bobLength, -bobLength] }}\n          transition={{\n            ease: \"easeInOut\",\n            duration: 3,\n            loop: Infinity,\n            times: [0, 0.5, 1],\n          }}\n        >\n          <img src={IconLogo} className=\"jumbotron-icon\" alt={\"bleep-icon\"} />\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","// @ts-ignore\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Uploader,\n  List,\n  IconButton,\n  Icon,\n  InputGroup,\n  Progress,\n  Alert,\n  Whisper,\n  Tooltip,\n  Modal,\n} from \"rsuite\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n// @ts-ignore\nimport io from \"socket.io-client\";\n// @ts-ignore\nimport { useMediaQuery } from \"react-responsive\";\n\nconst defaultWords = [\n  \"fuck\",\n  \"shit\",\n  \"bitch\",\n  \"bastard\",\n  \"fucker\",\n  \"hell\",\n  \"damn\",\n  \"dam\",\n  \"dick\",\n  \"dickhead\",\n  \"ass\",\n  \"asshole\",\n  \"dumbass\",\n  \"cunt\",\n  \"kike\",\n  \"pussy\",\n  \"twat\",\n  \"slut\",\n  \"ho\",\n  \"hoe\",\n  \"douche\",\n  \"douchebag\",\n];\n\nconst progressStyle = { width: 120, display: \"inline-block\", marginRight: 10 };\n\ninterface ProgressObject {\n  progress: number;\n  status: string;\n  message: string;\n}\n\nfunction Stage() {\n  const [stage, setStage] = useState(1);\n  const [video, setVideo] = useState(null);\n  const [sfx, setSfx] = useState(null);\n  const [words, setWords] = useState(defaultWords.sort());\n  const [word, setWord] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [status, setStatus] = useState(\"loading\");\n  const [message, setMessage] = useState(\"Starting...\");\n  const [downloadUrl, setDownloadUrl] = useState(null);\n  const [errorId, setErrorId] = useState(null);\n  const [socketId, setSocketId] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 712px)\",\n  });\n\n  useEffect(() => {\n    const socket = io(\"/\");\n\n    socket.on(\"connect\", () => {\n      setSocketId(socket.id);\n    });\n\n    socket.on(\"progress\", (data: ProgressObject) => {\n      setProgress(data.progress);\n      setStatus(data.status);\n      setMessage(data.message);\n\n      if (data.progress >= 1) {\n        setProgress(1);\n      }\n    });\n  }, []);\n\n  let handleSetVideo = (files: Array<any>) => {\n    if (files.length >= 1) {\n      setVideo(files[files.length - 1]);\n    } else {\n      setVideo(null);\n    }\n  };\n\n  let handleSetSfx = (files: Array<any>) => {\n    if (files.length >= 1) {\n      setSfx(files[files.length - 1]);\n    } else {\n      setSfx(null);\n    }\n  };\n\n  let handleRemoveWord = (word: string) => {\n    setWords(words.filter((w) => w !== word));\n  };\n\n  let handleAddWord = () => {\n    if (!words.includes(word.trim())) {\n      setWords([...words, word.trim()].sort());\n    } else {\n      Alert.info(`${word} is already in the list.`);\n    }\n    setWord(\"\");\n  };\n\n  let handleClearAll = () => {\n    setConfirmModalOpen(false);\n    setWords([]);\n  };\n\n  let handleUpload = () => {\n    setStage(4);\n    if (video === null) {\n      return Alert.error(\"A video is required\");\n    }\n    if (words.length <= 0) {\n      return Alert.error(\"At least one word is required\");\n    }\n    let formData = new FormData();\n    // @ts-ignore\n    formData.append(\"video\", video.blobFile, video.name);\n    if (sfx) {\n      // @ts-ignore\n      formData.append(\"sfx\", sfx.blobFile, sfx.name);\n    }\n    formData.append(\"words\", JSON.stringify(words));\n    formData.append(\"socketId\", socketId || \"\");\n    fetch(\"/upload\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.statusCode === 200) {\n          setStatus(\"success\");\n          setDownloadUrl(res.url);\n          setErrorId(null);\n        } else {\n          setStatus(\"failed\");\n          setDownloadUrl(null);\n          if (res.errorRef) {\n            setErrorId(res.errorRef);\n          } else {\n            setErrorId(null);\n          }\n        }\n        setMessage(res.message);\n      })\n      .catch((e) => {\n        console.error(e);\n        setStatus(\"failed\");\n        setMessage(e.message);\n      });\n  };\n\n  let handleCopyErrorId = () => {\n    let textArea = document.createElement(\"textarea\");\n    textArea.value = errorId || \"\";\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand(\"Copy\");\n    textArea.remove();\n    setCopied(true);\n  };\n\n  let restartProcess = () => {\n    setVideo(null);\n    setStage(1);\n    setSfx(null);\n    setWords(defaultWords.sort());\n    setWord(\"\");\n    setProgress(0);\n    setStatus(\"loading\");\n    setMessage(\"Starting...\");\n    setDownloadUrl(null);\n    setErrorId(null);\n    setCopied(false);\n  };\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      {stage === 1 && (\n        <motion.div\n          key={\"stage_1\"}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className={\"stage\"}\n        >\n          <h3 className={\"stage-title\"}>Upload your video file</h3>\n          <Uploader\n            autoUpload={false}\n            // @ts-ignore\n            fileList={video !== null ? [video] : []}\n            onChange={handleSetVideo}\n            draggable\n            multiple={false}\n            accept={\"video/mp4,video/x-m4v,video/*\"}\n          >\n            <div>Click or Drag files to this area to upload</div>\n          </Uploader>\n          <Button\n            appearance={\"primary\"}\n            size={\"lg\"}\n            className={\"next-button\"}\n            onClick={() => setStage(2)}\n            disabled={video === null}\n          >\n            Next\n          </Button>\n        </motion.div>\n      )}\n      {stage === 2 && (\n        <motion.div\n          key={\"stage_2\"}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className={\"stage\"}\n        >\n          <IconButton\n            style={{\n              position: isTabletOrMobileDevice ? undefined : \"absolute\",\n              justifySelf: isTabletOrMobileDevice ? \"flex-start\" : undefined,\n              alignSelf: isTabletOrMobileDevice ? \"flex-start\" : undefined,\n              left: isTabletOrMobileDevice ? undefined : 30,\n              top: isTabletOrMobileDevice ? undefined : 30,\n            }}\n            appearance={isTabletOrMobileDevice ? \"ghost\" : \"subtle\"}\n            icon={<Icon icon={\"angle-left\"} />}\n            onClick={() => setStage(1)}\n          />\n          <h3 className={\"stage-title\"}>Add a Custom Sound Effect</h3>\n          <Uploader\n            autoUpload={false}\n            // @ts-ignore\n            fileList={sfx !== null ? [sfx] : []}\n            onChange={handleSetSfx}\n            draggable\n            className={\"uploader\"}\n            multiple={false}\n            accept={\"audio/mp3,audio/*\"}\n          >\n            <div>Click or Drag files to this area to upload</div>\n          </Uploader>\n          <Button\n            appearance={\"primary\"}\n            size={\"lg\"}\n            className={\"next-button\"}\n            onClick={() => setStage(3)}\n          >\n            {sfx !== null ? \"Next\" : \"Skip & Use Default\"}\n          </Button>\n        </motion.div>\n      )}\n      {stage === 3 && (\n        <motion.div\n          key={\"stage_3\"}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className={\"stage\"}\n        >\n          <IconButton\n            style={{\n              position: isTabletOrMobileDevice ? undefined : \"absolute\",\n              justifySelf: isTabletOrMobileDevice ? \"flex-start\" : undefined,\n              alignSelf: isTabletOrMobileDevice ? \"flex-start\" : undefined,\n              left: isTabletOrMobileDevice ? undefined : 30,\n              top: isTabletOrMobileDevice ? undefined : 30,\n            }}\n            appearance={isTabletOrMobileDevice ? \"ghost\" : \"subtle\"}\n            icon={<Icon icon={\"angle-left\"} />}\n            onClick={() => setStage(2)}\n          />\n          <h3 className={\"stage-title\"}>Select Your Words</h3>\n          <InputGroup>\n            <Input\n              placeholder={\"Add words...\"}\n              value={word}\n              onChange={setWord}\n              onPressEnter={handleAddWord}\n            />\n            <InputGroup.Button onClick={handleAddWord}>\n              <Icon icon={\"plus\"} />\n            </InputGroup.Button>\n          </InputGroup>\n          <List\n            size={\"sm\"}\n            bordered\n            style={{\n              width: \"100%\",\n              marginTop: 15,\n              flex: isTabletOrMobileDevice ? undefined : 4,\n              height: `30vh`,\n            }}\n          >\n            {words.map((item, index) => (\n              <List.Item key={index} index={index}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {item}\n                  <IconButton\n                    appearance={\"subtle\"}\n                    icon={<Icon icon={\"close\"} />}\n                    onClick={() => handleRemoveWord(item)}\n                  />\n                </div>\n              </List.Item>\n            ))}\n          </List>\n          <div\n            style={{\n              flex: 1,\n              marginTop: 15,\n              marginBottom: 15,\n              display: \"flex\",\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Button\n              appearance={\"ghost\"}\n              size={\"lg\"}\n              onClick={() => setConfirmModalOpen(true)}\n              disabled={words.length <= 0}\n            >\n              Clear All\n            </Button>\n            <Button\n              appearance={\"primary\"}\n              size={\"lg\"}\n              onClick={handleUpload}\n              disabled={words.length <= 0}\n            >\n              Start That S%*t!\n            </Button>\n          </div>\n        </motion.div>\n      )}\n      {stage === 4 && (\n        <motion.div\n          key={\"stage_4\"}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className={\"stage\"}\n        >\n          {status === \"loading\" && (\n            <Progress.Circle\n              style={progressStyle}\n              percent={progress * 100}\n              trailColor={\"#0f131a\"}\n              status={\"active\"}\n            />\n          )}\n          {status === \"success\" && (\n            <Progress.Circle\n              style={progressStyle}\n              percent={100}\n              trailColor={\"#0f131a\"}\n              status={\"success\"}\n            />\n          )}\n          {status === \"failed\" && (\n            <Progress.Circle\n              style={progressStyle}\n              percent={100}\n              status={\"fail\"}\n            />\n          )}\n          <h3 className={`progress-message-${status}`}>{message}</h3>\n          {downloadUrl && (\n            <>\n              <Whisper\n                placement={isTabletOrMobileDevice ? \"top\" : \"right\"}\n                trigger={\"hover\"}\n                speaker={\n                  <Tooltip>\n                    This link will be active for the next 24 hours.\n                  </Tooltip>\n                }\n              >\n                <Button\n                  appearance={\"primary\"}\n                  size={\"lg\"}\n                  href={downloadUrl || \"\"}\n                  target={\"_blank\"}\n                  className=\"download-button\"\n                >\n                  Download your s%*t!\n                </Button>\n              </Whisper>\n              <Button\n                appearance={\"primary\"}\n                size={\"lg\"}\n                onClick={restartProcess}\n                target={\"_blank\"}\n                className=\"download-button\"\n              >\n                Bleep some more!\n              </Button>\n            </>\n          )}\n          {errorId && (\n            <>\n              <h6 className={`progress-message-${status}`}>\n                Contact support with case id{\" \"}\n                <Whisper\n                  placement={\"bottom\"}\n                  trigger={\"hover\"}\n                  speaker={\n                    <Tooltip>{copied ? \"Copied!\" : \"Click to copy\"}</Tooltip>\n                  }\n                  onExited={() => setCopied(false)}\n                >\n                  <span\n                    style={{ cursor: \"pointer\" }}\n                    onClick={handleCopyErrorId}\n                  >\n                    {errorId}\n                  </span>\n                </Whisper>\n              </h6>\n              <Button\n                appearance={\"primary\"}\n                size={\"lg\"}\n                onClick={restartProcess}\n                target={\"_blank\"}\n                className=\"download-button\"\n              >\n                Try Again\n              </Button>\n            </>\n          )}\n        </motion.div>\n      )}\n      <Modal\n        size={\"xs\"}\n        show={confirmModalOpen}\n        onHide={() => setConfirmModalOpen(false)}\n      >\n        <Modal.Header>\n          <Modal.Title>Clear All Words?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to clear your words list entirely?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => handleClearAll()} appearance=\"primary\">\n            Clear All\n          </Button>\n          <Button\n            onClick={() => setConfirmModalOpen(false)}\n            appearance=\"subtle\"\n          >\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </AnimatePresence>\n  );\n}\n\nexport default Stage;\n","import React from \"react\";\nimport Stage from \"./stage\";\n// @ts-ignore\nimport { Helmet } from \"react-helmet\";\n// @ts-ignore\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction Upload() {\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 712px)\",\n  });\n  return (\n    <div>\n      <Helmet>\n        <title>Upload | Bleep</title>\n      </Helmet>\n      <div\n        className=\"full-page-section\"\n        style={{\n          height: isTabletOrMobileDevice ? window.innerHeight - 56 : \"100vh\",\n        }}\n      >\n        <div\n          className=\"center-form\"\n          style={{\n            backgroundColor: isTabletOrMobileDevice ? \"transparent\" : undefined,\n            width: isTabletOrMobileDevice ? \"90vw\" : undefined,\n            height: isTabletOrMobileDevice ? \"auto\" : undefined,\n          }}\n        >\n          <Stage />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Upload;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./routes/home\";\n// @ts-ignore\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NotFound from \"./routes/notFound\";\nimport Upload from \"./routes/upload\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path={\"/upload\"}>\n          <Upload />\n        </Route>\n        <Route exact path={\"/\"}>\n          <Home />\n        </Route>\n        <Route path={\"/*\"}>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.9412c30c.svg\";"],"sourceRoot":""}